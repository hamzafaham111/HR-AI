{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Resume Analysis API\nexport const resumeAPI = {\n  // Upload resume file\n  uploadResume: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/api/v1/resume/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Get analysis results\n  getAnalysis: async analysisId => {\n    const response = await api.get(`/api/v1/resume/analysis/${analysisId}`);\n    return response.data;\n  },\n  // Get analysis status\n  getStatus: async analysisId => {\n    const response = await api.get(`/api/v1/resume/status/${analysisId}`);\n    return response.data;\n  }\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n  // Get all analyses with pagination\n  getAnalyses: async (limit = 20, offset = 0) => {\n    const response = await api.get('/api/v1/dashboard/analyses', {\n      params: {\n        limit,\n        offset\n      }\n    });\n    return response.data;\n  },\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n  // Search analyses\n  searchAnalyses: async (query, limit = 10) => {\n    const response = await api.get('/api/v1/dashboard/search', {\n      params: {\n        query,\n        limit\n      }\n    });\n    return response.data;\n  }\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","resumeAPI","uploadResume","file","formData","FormData","append","post","getAnalysis","analysisId","get","getStatus","dashboardAPI","getOverview","getAnalyses","limit","offset","params","getStatistics","searchAnalyses","query","healthAPI","checkHealth"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Resume Analysis API\nexport const resumeAPI = {\n  // Upload resume file\n  uploadResume: async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/api/v1/resume/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get analysis results\n  getAnalysis: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/analysis/${analysisId}`);\n    return response.data;\n  },\n\n  // Get analysis status\n  getStatus: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/status/${analysisId}`);\n    return response.data;\n  },\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n\n  // Get all analyses with pagination\n  getAnalyses: async (limit = 20, offset = 0) => {\n    const response = await api.get('/api/v1/dashboard/analyses', {\n      params: { limit, offset },\n    });\n    return response.data;\n  },\n\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n\n  // Search analyses\n  searchAnalyses: async (query, limit = 10) => {\n    const response = await api.get('/api/v1/dashboard/search', {\n      params: { query, limit },\n    });\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,iBAAAF,cAAA,GAAgBD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,CAAC;EACzE,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC1C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAlB,GAAG,CAACQ,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,iBAAiBO,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACV,MAAM,CAACM,GAAG,EAAE,CAAC;EACtE,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA;EACTV,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAE,EAAAK,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIN,KAAK,CAACO,OAAO,CAAC;EAC3E,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMQ,SAAS,GAAG;EACvB;EACAC,YAAY,EAAE,MAAOC,IAAI,IAAK;IAC5B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMP,QAAQ,GAAG,MAAMrB,GAAG,CAACgC,IAAI,CAAC,uBAAuB,EAAEH,QAAQ,EAAE;MACjEtB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOc,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAS,WAAW,EAAE,MAAOC,UAAU,IAAK;IACjC,MAAMb,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,2BAA2BD,UAAU,EAAE,CAAC;IACvE,OAAOb,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAY,SAAS,EAAE,MAAOF,UAAU,IAAK;IAC/B,MAAMb,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,yBAAyBD,UAAU,EAAE,CAAC;IACrE,OAAOb,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,YAAY,GAAG;EAC1B;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMjB,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,4BAA4B,CAAC;IAC5D,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAe,WAAW,EAAE,MAAAA,CAAOC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,KAAK;IAC7C,MAAMpB,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,4BAA4B,EAAE;MAC3DO,MAAM,EAAE;QAAEF,KAAK;QAAEC;MAAO;IAC1B,CAAC,CAAC;IACF,OAAOpB,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAmB,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMtB,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,8BAA8B,CAAC;IAC9D,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAoB,cAAc,EAAE,MAAAA,CAAOC,KAAK,EAAEL,KAAK,GAAG,EAAE,KAAK;IAC3C,MAAMnB,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,0BAA0B,EAAE;MACzDO,MAAM,EAAE;QAAEG,KAAK;QAAEL;MAAM;IACzB,CAAC,CAAC;IACF,OAAOnB,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMsB,SAAS,GAAG;EACvBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAM1B,QAAQ,GAAG,MAAMrB,GAAG,CAACmC,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOd,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}