{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor for logging\napi.interceptors.request.use(config=>{var _config$method;console.log(`API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);return config;},error=>{console.error('API Request Error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{console.log(`API Response: ${response.status} ${response.config.url}`);return response;},error=>{var _error$response;console.error('API Response Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);return Promise.reject(error);});// Resume Analysis API\nexport const resumeAPI={// Upload resume file\nuploadResume:async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/api/v1/resume/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Get analysis results\ngetAnalysis:async analysisId=>{const response=await api.get(`/api/v1/resume/analysis/${analysisId}`);return response.data;},// Get analysis status\ngetStatus:async analysisId=>{const response=await api.get(`/api/v1/resume/status/${analysisId}`);return response.data;}};// Dashboard API\nexport const dashboardAPI={// Get dashboard overview\ngetOverview:async()=>{const response=await api.get('/api/v1/dashboard/overview');return response.data;},// Get all analyses with pagination\ngetAnalyses:async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;let offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const response=await api.get('/api/v1/dashboard/analyses',{params:{limit,offset}});return response.data;},// Get statistics\ngetStatistics:async()=>{const response=await api.get('/api/v1/dashboard/statistics');return response.data;},// Search analyses\nsearchAnalyses:async function(query){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;const response=await api.get('/api/v1/dashboard/search',{params:{query,limit}});return response.data;}};// Health check\nexport const healthAPI={checkHealth:async()=>{const response=await api.get('/health');return response.data;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","resumeAPI","uploadResume","file","formData","FormData","append","post","getAnalysis","analysisId","get","getStatus","dashboardAPI","getOverview","getAnalyses","limit","arguments","length","undefined","offset","params","getStatistics","searchAnalyses","query","healthAPI","checkHealth"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/services/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Resume Analysis API\nexport const resumeAPI = {\n  // Upload resume file\n  uploadResume: async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/api/v1/resume/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get analysis results\n  getAnalysis: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/analysis/${analysisId}`);\n    return response.data;\n  },\n\n  // Get analysis status\n  getStatus: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/status/${analysisId}`);\n    return response.data;\n  },\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n\n  // Get all analyses with pagination\n  getAnalyses: async (limit = 20, offset = 0) => {\n    const response = await api.get('/api/v1/dashboard/analyses', {\n      params: { limit, offset },\n    });\n    return response.data;\n  },\n\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n\n  // Search analyses\n  searchAnalyses: async (query, limit = 10) => {\n    const response = await api.get('/api/v1/dashboard/search', {\n      params: { query, limit },\n    });\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}