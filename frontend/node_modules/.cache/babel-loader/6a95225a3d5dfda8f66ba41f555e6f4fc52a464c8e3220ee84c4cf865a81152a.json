{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging and auth token\napi.interceptors.request.use(async config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n\n  // Add auth token if available\n  const accessToken = localStorage.getItem('accessToken');\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling and token refresh\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, async error => {\n  var _error$response, _error$response2;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Handle 401 errors with token refresh\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 && !error.config._retry) {\n    error.config._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      const response = await axios.post(`${api.defaults.baseURL}/api/v1/auth/refresh`, {\n        refresh_token: refreshToken\n      });\n      const {\n        access_token,\n        expires_in\n      } = response.data;\n      localStorage.setItem('accessToken', access_token);\n      localStorage.setItem('tokenExpiresAt', Date.now() + expires_in * 1000);\n\n      // Retry the original request with new token\n      error.config.headers.Authorization = `Bearer ${access_token}`;\n      return api(error.config);\n    } catch (refreshError) {\n      // Refresh failed, logout user\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('tokenExpiresAt');\n      localStorage.removeItem('user');\n\n      // Redirect to login\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Resume Analysis API\nexport const resumeAPI = {\n  // Upload resume file\n  uploadResume: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/api/v1/resume/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Get analysis results\n  getAnalysis: async analysisId => {\n    const response = await api.get(`/api/v1/resume/analysis/${analysisId}`);\n    return response.data;\n  },\n  // Get analysis status\n  getStatus: async analysisId => {\n    const response = await api.get(`/api/v1/resume/status/${analysisId}`);\n    return response.data;\n  }\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n  // Get all analyses with pagination\n  getAnalyses: async (limit = 20, offset = 0) => {\n    const response = await api.get('/api/v1/dashboard/analyses', {\n      params: {\n        limit,\n        offset\n      }\n    });\n    return response.data;\n  },\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n  // Search analyses\n  searchAnalyses: async (query, limit = 10) => {\n    const response = await api.get('/api/v1/dashboard/search', {\n      params: {\n        query,\n        limit\n      }\n    });\n    return response.data;\n  }\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","accessToken","localStorage","getItem","Authorization","error","Promise","reject","response","status","_error$response","_error$response2","data","message","_retry","refreshToken","Error","post","defaults","refresh_token","access_token","expires_in","setItem","Date","now","refreshError","removeItem","window","location","href","resumeAPI","uploadResume","file","formData","FormData","append","getAnalysis","analysisId","get","getStatus","dashboardAPI","getOverview","getAnalyses","limit","offset","params","getStatistics","searchAnalyses","query","healthAPI","checkHealth"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging and auth token\napi.interceptors.request.use(\n  async (config) => {\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    \n    // Add auth token if available\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      config.headers.Authorization = `Bearer ${accessToken}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling and token refresh\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  async (error) => {\n    console.error('API Response Error:', error.response?.data || error.message);\n    \n    // Handle 401 errors with token refresh\n    if (error.response?.status === 401 && !error.config._retry) {\n      error.config._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (!refreshToken) {\n          throw new Error('No refresh token available');\n        }\n\n        const response = await axios.post(`${api.defaults.baseURL}/api/v1/auth/refresh`, {\n          refresh_token: refreshToken\n        });\n\n        const { access_token, expires_in } = response.data;\n        \n        localStorage.setItem('accessToken', access_token);\n        localStorage.setItem('tokenExpiresAt', Date.now() + (expires_in * 1000));\n\n        // Retry the original request with new token\n        error.config.headers.Authorization = `Bearer ${access_token}`;\n        return api(error.config);\n      } catch (refreshError) {\n        // Refresh failed, logout user\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('tokenExpiresAt');\n        localStorage.removeItem('user');\n        \n        // Redirect to login\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Resume Analysis API\nexport const resumeAPI = {\n  // Upload resume file\n  uploadResume: async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/api/v1/resume/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get analysis results\n  getAnalysis: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/analysis/${analysisId}`);\n    return response.data;\n  },\n\n  // Get analysis status\n  getStatus: async (analysisId) => {\n    const response = await api.get(`/api/v1/resume/status/${analysisId}`);\n    return response.data;\n  },\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n\n  // Get all analyses with pagination\n  getAnalyses: async (limit = 20, offset = 0) => {\n    const response = await api.get('/api/v1/dashboard/analyses', {\n      params: { limit, offset },\n    });\n    return response.data;\n  },\n\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n\n  // Search analyses\n  searchAnalyses: async (query, limit = 10) => {\n    const response = await api.get('/api/v1/dashboard/search', {\n      params: { query, limit },\n    });\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}