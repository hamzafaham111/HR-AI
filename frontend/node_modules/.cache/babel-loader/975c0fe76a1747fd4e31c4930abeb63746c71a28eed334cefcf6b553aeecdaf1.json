{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token and logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  // Add authorization header if token exists\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling and token refresh\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, async error => {\n  var _error$response, _error$response2;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Handle 401 Unauthorized errors (token expired)\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      try {\n        // Try to refresh the token\n        const refreshResponse = await axios.post('http://localhost:8000/api/v1/auth/refresh', {\n          refresh_token: refreshToken\n        });\n        if (refreshResponse.data.access_token) {\n          // Update the token in localStorage\n          localStorage.setItem('accessToken', refreshResponse.data.access_token);\n          localStorage.setItem('tokenExpiresAt', Date.now() + refreshResponse.data.expires_in * 1000);\n\n          // Retry the original request with the new token\n          const originalRequest = error.config;\n          originalRequest.headers.Authorization = `Bearer ${refreshResponse.data.access_token}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('tokenExpiresAt');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Resume Analysis API removed - functionality moved to resume bank\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  }\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","data","message","refreshToken","refreshResponse","post","refresh_token","access_token","setItem","Date","now","expires_in","originalRequest","refreshError","removeItem","window","location","href","dashboardAPI","getOverview","get","getStatistics","healthAPI","checkHealth"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/services/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for adding auth token and logging\napi.interceptors.request.use(\n  (config) => {\n    // Add authorization header if token exists\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling and token refresh\napi.interceptors.response.use(\n  (response) => {\n    console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  async (error) => {\n    console.error('API Response Error:', error.response?.data || error.message);\n    \n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response?.status === 401) {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        try {\n          // Try to refresh the token\n          const refreshResponse = await axios.post('http://localhost:8000/api/v1/auth/refresh', {\n            refresh_token: refreshToken\n          });\n          \n          if (refreshResponse.data.access_token) {\n            // Update the token in localStorage\n            localStorage.setItem('accessToken', refreshResponse.data.access_token);\n            localStorage.setItem('tokenExpiresAt', Date.now() + (refreshResponse.data.expires_in * 1000));\n            \n            // Retry the original request with the new token\n            const originalRequest = error.config;\n            originalRequest.headers.Authorization = `Bearer ${refreshResponse.data.access_token}`;\n            return api(originalRequest);\n          }\n        } catch (refreshError) {\n          // Refresh failed, redirect to login\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          localStorage.removeItem('tokenExpiresAt');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Resume Analysis API removed - functionality moved to resume bank\n\n// Dashboard API\nexport const dashboardAPI = {\n  // Get dashboard overview\n  getOverview: async () => {\n    const response = await api.get('/api/v1/dashboard/overview');\n    return response.data;\n  },\n\n  // Get statistics\n  getStatistics: async () => {\n    const response = await api.get('/api/v1/dashboard/statistics');\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}