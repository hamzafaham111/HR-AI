{"ast":null,"code":"import { API_CONFIG, HTTP_METHODS, HTTP_STATUS } from '../constants/api';\nclass ApiError extends Error {\n  constructor(message, status, data = null) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.data = data;\n  }\n}\nexport const apiRequest = async (endpoint, options = {}) => {\n  const {\n    method = HTTP_METHODS.GET,\n    body = null,\n    headers = {},\n    timeout = API_CONFIG.TIMEOUT\n  } = options;\n  const url = `${API_CONFIG.BASE_URL}${endpoint}`;\n  const requestOptions = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers\n    },\n    ...(body && {\n      body: JSON.stringify(body)\n    })\n  };\n\n  // Add auth token if available\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    requestOptions.headers.Authorization = `Bearer ${token}`;\n  }\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n    const response = await fetch(url, {\n      ...requestOptions,\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new ApiError(errorData.detail || `HTTP ${response.status}`, response.status, errorData);\n    }\n\n    // Handle empty responses\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    }\n    return null;\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      throw new ApiError('Request timeout', 408);\n    }\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new ApiError('Network error', 0, error.message);\n  }\n};\nexport const handleApiError = error => {\n  if (error instanceof ApiError) {\n    switch (error.status) {\n      case HTTP_STATUS.UNAUTHORIZED:\n        // Handle unauthorized - redirect to login\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        break;\n      case HTTP_STATUS.FORBIDDEN:\n        // Handle forbidden\n        console.error('Access forbidden:', error.message);\n        break;\n      case HTTP_STATUS.NOT_FOUND:\n        // Handle not found\n        console.error('Resource not found:', error.message);\n        break;\n      default:\n        console.error('API Error:', error.message);\n    }\n  } else {\n    console.error('Unexpected error:', error);\n  }\n  return error.message || 'An unexpected error occurred';\n};\nexport const isNetworkError = error => {\n  return error.status === 0 || error.message.includes('Network error');\n};\nexport const isAuthError = error => {\n  return error.status === HTTP_STATUS.UNAUTHORIZED || error.status === HTTP_STATUS.FORBIDDEN;\n};","map":{"version":3,"names":["API_CONFIG","HTTP_METHODS","HTTP_STATUS","ApiError","Error","constructor","message","status","data","name","apiRequest","endpoint","options","method","GET","body","headers","timeout","TIMEOUT","url","BASE_URL","requestOptions","JSON","stringify","token","localStorage","getItem","Authorization","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","errorData","json","catch","detail","contentType","get","includes","error","handleApiError","UNAUTHORIZED","removeItem","window","location","href","FORBIDDEN","console","NOT_FOUND","isNetworkError","isAuthError"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/utils/api.js"],"sourcesContent":["import { API_CONFIG, HTTP_METHODS, HTTP_STATUS } from '../constants/api';\n\nclass ApiError extends Error {\n  constructor(message, status, data = null) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.data = data;\n  }\n}\n\nexport const apiRequest = async (endpoint, options = {}) => {\n  const {\n    method = HTTP_METHODS.GET,\n    body = null,\n    headers = {},\n    timeout = API_CONFIG.TIMEOUT,\n  } = options;\n\n  const url = `${API_CONFIG.BASE_URL}${endpoint}`;\n  \n  const requestOptions = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    ...(body && { body: JSON.stringify(body) }),\n  };\n\n  // Add auth token if available\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    requestOptions.headers.Authorization = `Bearer ${token}`;\n  }\n\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    const response = await fetch(url, {\n      ...requestOptions,\n      signal: controller.signal,\n    });\n\n    clearTimeout(timeoutId);\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new ApiError(\n        errorData.detail || `HTTP ${response.status}`,\n        response.status,\n        errorData\n      );\n    }\n\n    // Handle empty responses\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    }\n    \n    return null;\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      throw new ApiError('Request timeout', 408);\n    }\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new ApiError('Network error', 0, error.message);\n  }\n};\n\nexport const handleApiError = (error) => {\n  if (error instanceof ApiError) {\n    switch (error.status) {\n      case HTTP_STATUS.UNAUTHORIZED:\n        // Handle unauthorized - redirect to login\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        break;\n      case HTTP_STATUS.FORBIDDEN:\n        // Handle forbidden\n        console.error('Access forbidden:', error.message);\n        break;\n      case HTTP_STATUS.NOT_FOUND:\n        // Handle not found\n        console.error('Resource not found:', error.message);\n        break;\n      default:\n        console.error('API Error:', error.message);\n    }\n  } else {\n    console.error('Unexpected error:', error);\n  }\n  \n  return error.message || 'An unexpected error occurred';\n};\n\nexport const isNetworkError = (error) => {\n  return error.status === 0 || error.message.includes('Network error');\n};\n\nexport const isAuthError = (error) => {\n  return error.status === HTTP_STATUS.UNAUTHORIZED || error.status === HTTP_STATUS.FORBIDDEN;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}