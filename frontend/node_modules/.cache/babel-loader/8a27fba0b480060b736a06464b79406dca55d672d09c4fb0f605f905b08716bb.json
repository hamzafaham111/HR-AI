{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing user session\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('token', data.access_token);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.detail || 'Login failed'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: userData.name,\n          email: userData.email,\n          password: userData.password,\n          role: 'user',\n          company: userData.company || null\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data);\n        localStorage.setItem('user', JSON.stringify(data));\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.detail || 'Registration failed'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  const forgotPassword = async email => {\n    try {\n      // TODO: Implement actual password reset API call\n      // For now, simulate a successful password reset request\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","setItem","access_token","success","error","detail","register","userData","name","role","company","logout","removeItem","forgotPassword","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/myWork/personal/AI/first/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing user session\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('token', data.access_token);\n        return { success: true };\n      } else {\n        return { success: false, error: data.detail || 'Login failed' };\n      }\n    } catch (error) {\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: userData.name,\n          email: userData.email,\n          password: userData.password,\n          role: 'user',\n          company: userData.company || null\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data);\n        localStorage.setItem('user', JSON.stringify(data));\n        return { success: true };\n      } else {\n        return { success: false, error: data.detail || 'Registration failed' };\n      }\n    } catch (error) {\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  const forgotPassword = async (email) => {\n    try {\n      // TODO: Implement actual password reset API call\n      // For now, simulate a successful password reset request\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}